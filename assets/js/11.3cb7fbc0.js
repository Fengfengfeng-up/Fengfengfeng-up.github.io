(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{372:function(t,s,a){t.exports=a.p+"assets/img/container-with-most-water.9daebb6e.jpg"},428:function(t,s,a){"use strict";a.r(s);var e=a(11),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"盛最多水的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盛最多水的容器"}},[t._v("#")]),t._v(" 盛最多水的容器")]),t._v(" "),e("h2",{attrs:{id:"题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),e("p",[t._v("给你 "),e("code",[t._v("n")]),t._v(" 个非负整数 "),e("code",[t._v("a1，a2，...，an")]),t._v("，每个数代表坐标中的一个点 "),e("code",[t._v("(i, ai)")]),t._v(" 。在坐标内画 "),e("code",[t._v("n")]),t._v(" 条垂直线，垂直线 "),e("code",[t._v("i")]),t._v(" 的两个端点分别为 "),e("code",[t._v("(i, ai)")]),t._v(" 和 "),e("code",[t._v("(i, 0)")]),t._v(" 。找出其中的两条线，使得它们与 "),e("code",[t._v("x")]),t._v(" 轴共同构成的容器可以容纳最多的水。")]),t._v(" "),e("p",[e("strong",[t._v("说明：")]),t._v(" 你不能倾斜容器。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1：")]),t._v(" "),e("img",{attrs:{src:a(372),alt:"示例1"}})]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("输入：[1,8,6,2,5,4,8,3,7]\n输出：49 \n解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。\n")])])]),e("p",[e("strong",[t._v("示例 2：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("输入：height = [1,1]\n输出：1\n")])])]),e("p",[e("strong",[t._v("示例 3：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("输入：height = [4,3,2,1,4]\n输出：16\n")])])]),e("p",[e("strong",[t._v("示例 4：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("输入：height = [1,2,1]\n输出：2\n")])])]),e("p",[e("strong",[t._v("提示：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("n = height.length")])]),t._v(" "),e("li",[e("code",[t._v("2 <= n <= 3 * 10^4")])]),t._v(" "),e("li",[e("code",[t._v("0 <= height[i] <= 3 * 10^4")])])]),t._v(" "),e("p",[t._v("力扣🔗："),e("a",{attrs:{href:"https://leetcode-cn.com/problems/container-with-most-water",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com/problems/container-with-most-water"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"解题思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[t._v("#")]),t._v(" 解题思路")]),t._v(" "),e("ul",[e("li",[t._v("使用双指针动态计算最大范围，初始状态为左指针 "),e("code",[t._v("l")]),t._v(" 指向 "),e("code",[t._v("height")]),t._v(" 首位，右指针 "),e("code",[t._v("r")]),t._v(" 指向 "),e("code",[t._v("height")]),t._v(" 末位。")]),t._v(" "),e("li",[t._v("根据左指针指向值 "),e("code",[t._v("height[l]")]),t._v("、右指针指向值 "),e("code",[t._v("height[r]")]),t._v(" 和它们之间跨度 "),e("code",[t._v("r - l")]),t._v(" 计算范围，并比较更新最大范围。")]),t._v(" "),e("li",[t._v("最后比较 "),e("code",[t._v("height[l]")]),t._v(" 和 "),e("code",[t._v("height[r]")]),t._v(" 大小，不断移动指针，直到两指针重合。")])]),t._v(" "),e("h2",{attrs:{id:"代码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @param {number[]} height\r\n * @return {number}\r\n */")]),t._v("\r\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxArea")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左指针")]),t._v("\r\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右指针")]),t._v("\r\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果")]),t._v("\r\n\r\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环直到两指针重合")]),t._v("\r\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左指针指向的值")]),t._v("\r\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vR "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右指针指向的值")]),t._v("\r\n\r\n    result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vR"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算最大值")]),t._v("\r\n    vL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" vR "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 vL 小于等于 vR，则移动左指针向右一位，否则移动右指针向左一位")]),t._v("\r\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\r\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);