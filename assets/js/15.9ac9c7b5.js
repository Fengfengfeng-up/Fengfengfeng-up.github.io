(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{376:function(t,s,a){t.exports=a.p+"assets/img/remove_ex1.da949246.jpg"},444:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"删除链表的倒数第-n-个结点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除链表的倒数第-n-个结点"}},[t._v("#")]),t._v(" 删除链表的倒数第 N 个结点")]),t._v(" "),n("p",[t._v("力扣🔗："),n("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),n("p",[t._v("给你一个链表，删除链表的倒数第 "),n("code",[t._v("n")]),t._v(" 个结点，并且返回链表的头结点。")]),t._v(" "),n("p",[n("strong",[t._v("进阶：")]),t._v(" 你能尝试使用一趟扫描实现吗？")]),t._v(" "),n("p",[n("strong",[t._v("示例 1：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(376),alt:"RemoveEx1"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("输入：head = [1,2,3,4,5], n = 2\n输出：[1,2,3,5]\n")])])]),n("p",[n("strong",[t._v("示例 2：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("输入：head = [1], n = 1\n输出：[]\n")])])]),n("p",[n("strong",[t._v("示例 3：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("输入：head = [1,2], n = 1\n输出：[1]\n")])])]),n("p",[n("strong",[t._v("提示：")])]),t._v(" "),n("ul",[n("li",[t._v("链表中结点的数目为 "),n("code",[t._v("sz")])]),t._v(" "),n("li",[n("code",[t._v("1 <= sz <= 30")])]),t._v(" "),n("li",[n("code",[t._v("0 <= Node.val <= 100")])]),t._v(" "),n("li",[n("code",[t._v("1 <= n <= sz")])])]),t._v(" "),n("h2",{attrs:{id:"解题思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[t._v("#")]),t._v(" 解题思路")]),t._v(" "),n("ul",[n("li",[t._v("通过移动快慢指针，找出需要删除的节点的前一个节点。")]),t._v(" "),n("li",[t._v("首先在链表头部增加一个虚拟节点，方便后续删除节点操作。")]),t._v(" "),n("li",[t._v("设置快指针 "),n("code",[t._v("first")]),t._v("，先移动到链表的第 "),n("code",[t._v("n")]),t._v(" 个节点，然后设置慢指针 "),n("code",[t._v("second")]),t._v(" 指向链表的头节点（上次操作设置的虚拟节点），随后通过循环同步移动两指针向各自的下一个节点，直到 "),n("code",[t._v("first")]),t._v(" 到达最后一个节点。")]),t._v(" "),n("li",[t._v("此时 "),n("code",[t._v("second")]),t._v(" 到达的位置正好是倒数第 "),n("code",[t._v("n")]),t._v(" 个节点的前一个节点，因此删除下一个节点即可。")])]),t._v(" "),n("h2",{attrs:{id:"代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\r\n * @param {ListNode} head\r\n * @param {number} n\r\n * @return {ListNode}\r\n */")]),t._v("\r\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeNthFromEnd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dummy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟节点")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dummy\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first 指针先行 n 个节点")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\r\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当 first 指针到链表最后一个节点时，second 指针刚好是倒数第 n 个节点的前一个节点")]),t._v("\r\n    second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\r\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n\r\n  second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除倒数第 n 个节点")]),t._v("\r\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dummy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\r\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\r\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);